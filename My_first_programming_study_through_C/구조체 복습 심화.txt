구조체 복습 : 구조체는 설계의 측면에서 의미가 있음  사실 구조체를 완벽하게 이해하기 위해서는 정말 실질적으로 어떻게 프로그램이
활용이 되는지에 대해서 이해를 하는게 급선무임 

예를 들어서 학생 정보 시스템을 만든다고 하면 (이러한 시스템 같은 경우는 일반적으로 대학교에서 사용이 많이 될것임) 

*학생 정보 시스템  (설계한다고 가정) 이러한 시스템을 설계한다고 했을때 빠질수 없는게 바로 데이터 모델링 인데요 학생정보 시스템이기 때문에 
제일먼저 필요한것은 학생에 대한 정보를 저장하고 관리할수 있는 어떠한 공간이 필요할것임 그래서 {학생이라는 틀이 필요함}

*학생 정보 시스템
[학생]     이학생이라는 틀같은 경우는 어떠한 속성이 들어갈수 있을까요?

-학번      1번째로는 학번이 될수 있을것임 

-이름      2번쨰로는 이름이 될수 있을거고   

-학점      3번째로는 추가적으로 학점 같은것이 들어 갈수 있을것임

               이제 이러한 데이터 같은 경우를 프로래밍 상에서 그대로 구현할수 있게 해주는 것이 바로 구조체라고 할수 있는것임

*학생 정보 시스템
     이제이걸 그대로 구조체로 만들것임
[학생]
                   struct student 이렇게 구조체를 만드는 명령어를 넣어주고  그구조체 의 이름을 학생이라고 지음    
                  {
-이름   =>         int number;

-학번              char name [10];     케릭터 배열로 이름이라고 할수있는 name을 이렇게 만들어줌         

-학점              double GPA;          이런식으로 구조체를 설계할수 있을것임 

다시 정리하자면 

*학생 정보 시스템

[학생]
                   struct student    이런식으로 특정한 구조체를 만들어서 실제 프로그램 안에서 관리 할수가 있을것임 
                  {                    이런식으로 구조체를 만들어주는 이유가 뭐라고 했죠?
-이름   =>         int number;         물론 이렇게 안해주고 넘버 배열 따로, 네임 배열 따로, GPA 배열 따로 관리 할수도 있을것임  

-학번              char name [10];     근데 이렇게 하는것보다 스튜던트(학생) 이라고 실제세계에서 존재하는 이러한 객체 자체를 프로그래밍 안에서   
                                       묶어서 한번에 구현 한다는점에서                  ^ 
-학점              double GPA          **프로그래밍 상에서 되게 관리가 편할것임**  관리 |
                  }  
                                        그리고 실제로 데이터 베이스에 접근하고 어떠한 데이터를  관리하는 측면에서도 훨씬 호율적임

왜냐하면 
                                                 실제로 이런 학생 정보 시스템을 구현 한다고 했을때 
*학생 정보 시스템 ________________________________________ 따로 서버를 구축 해서 그서버안에 데이터 베이스를 만들것임
[학생]                                                   |    serber  
                   struct student                        |     DB          그럼 이데이터 베이스에는 어떤 정보가 들어갈까요?
                  {                                      |     |
-이름   =>         int number;                           |    table(학생) 이경우 테이블 학생이라는것을 만들어 관리할것임    
                                                         |                 데이터 베이스는 일반적으로 테이블이라는것을 만들어서 데이터를 관리함 
-학번              char name [10];                       |    -이름     
                                                         |    -학번        이처럼 테이블 학생 안에는 다양한 속성이 들어 가는데
-학점              double GPA                            |    -학점        이런식으로 각각의 속성을 명시해서 관리할수가 있는것임

                        즉 실질적으로 이프로그래밍 상에서 이서버에 접근해서 데이터베이스에서
                              이러한 이름,학번,학점을 그대로 1대1로 매칭해서 가져와라 
                그럼 프로그래밍상에서 이러한 구조체를 넘버 네임 GPA를 관리하기가 효율적인 것임 
                실제로 데이터를 뽑아오거나 할때도 이렇게 1대1호 매칭시켜주면 순식간에 데이터를 뽑아올수도 있음    
 

                                                             serber
*학생 정보 시스템 ________________________________________    DB
[학생]                                                   |    |                         한마디로 데이터 모델링 전반적인 측면에서 굉장히
                   struct student                        |    table(학생)               큰 이득을 가져올수 있는것임 
                  {                                      |                              
-이름   =>         int number;                           |  -이름                     이러한 측면에서 구조체가 굉장히 의미가 있다고 할수가 있음    
                                                         |
-학번              char name [10];                       |  -학번                        
                                                         |            
-학점              double GPA                            |  -학점         


                                                                          데이터 모델링 :데이터가 논리적으로 조직될 수 있도록 하는, 즉 논리적 데이터 구조로                                                                            변환되는 과정. 개념 세계가 컴퓨터가 이해하고 처리할 수 있게 하는 물리적 저장 장치에                                                                          데이터를 기록, 저장하도록 변환하기 위한 정보 구조에서 데이터 베이스 관리                                                                                    시스템(DBMS)이 지원하는 모델. 


나중에 이러한 구조체 개념이 객체 지향 프로그램에서는 클레스라는 개념으로 확장이 되서 사용이되고 
이 클레스 같은 경우는 구조체에 비해서 더욱더 보안이나 프로그램 운용에 있어서 더욱더 효율적인 관리가 가능하게 해준다는 장점이 있음.

이렇게 구조체가 사용되는 이유 같은 것을 정확하게 이해하는게 중요하다고 할수가 있음 

관리적인 측면이나 데이터 베이스 접근적인 측면이나 굉장히 더욱더 체계적으로 설계할수 있도록 해주는 것이죠
_________________________________________________________________________________________________________________

이렇게 간단하게 구조체가 왜쓰이는지 그러한 개념들을 정확하게 이해하는게 중요하다 할수가 있음 
사실상 여러 예재실습 같은것고 굉장히 중요하지만 구조체에대한 전반적인 개념을 확실히 이해하는게 더 중요하다고 할수 있음



구조체의 활용  
사람
. name    |_________|      이런식으로 이제 자기가 원하는 형태 어떠한 틀이 있으면 그러한 어떠한 실세계에서 사용되는 톨이 있으면 
. country |_________|      그걸 프로그램 상으로 그대로 옮길 필요가 있을것임 
. score   |_________|      왼쪽처럼 예를들어 사람이라는 틀이 있을때 사람의 이름, 지역, 점수,나이 같은것으로 속성을 정의 할수 있을것임 
. age     |_________|      
                           한마디로 자기가 어떠한 데이터를 설계 하던지 간에 상관없이 이렇게 자유자제로 자기가 원하는 형태로 구조체를 구현 할수 있을것임 


프로그램의 크기가 커지면 커질수록 c언어에서는 구조체의 활용이 불가피 합니다. 따라서 다양한 상황에서
그 상황에 맞게 적절하게 구조체를 활용하는 능력은 c언어 개발자에게 필수불가결 합니다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

구조체의 활용 실습( 설계의 측면에서 굉장히 큰의미가 있다고 했었음 
프로그램 전반적인 설계 자체를 구조체만 보고도 이해할수 있을정도로 설계가 잘된 프로그램은 구조체나 클레스 같은게 굉장히 잘짜여져 있음 
사실 말이어렵지 실제로 해보다보면은 구조체로 작성하는게 더 편리해서 당연히 구조체로 작성하고 있는 자신의 모습을 발견할수 있을것임)  











