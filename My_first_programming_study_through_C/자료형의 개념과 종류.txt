자료형 (그떄그떄 마다 달라질수 있는 부분 )
항상 똑같은 것을 사용하고 그런것이 아니라 예를들어 지금은 문자열을 사용해야돼, 문자를 써야돼 이럴떄는 
string 이나 char 형을 사용하는 것이 좋고 
내가 지금은  실수형을 표현해야해돼 이럴때는 float형과 double형을 사용하는게 좋음

아니면 함수같은것을 작성할때 이건 자료형이 필요없을거 같은데 이러면 void(빈공간) 형을 스면 된다 

                                         
                                                 DATA TYPE
                    l   Primitive (원시형) l Derivied (파생형) ㅣ user defined(사용자 지정) ㅣ
                            ㅣ                       ㅣ                    ㅣ
                             v                        v                     v
                    l  char("하나의"문자)ㅣ    array(배열)     ㅣ        enum                l
                    l   int(정수)        ㅣ    pointer(가르키다)|        structure(구조체)   |
                    |   float(실수)      ㅣ    function         l        union               l
                    l   double(실수)     ㅣ                    ㅣ                            ㅣ
                    ㅣ  void(빈공간)     ㅣ                    ㅣ                            ㅣ

                   사실 원시 자료형만 알아도 웬만한 프로그래밍하는데 큰문제는 없음


C언어에서 사용되는 자료형은 다양합니다. 사실 전체 자료형의 종류로는 사용자 지정 자료형(user defined), 파생자료형(Derivied)등이 있지만 흔히 말하는 자료형은 원시 자료형(Primitive)만을 말하는 경우가 많습니다.

C언어에서 문자를 효현할때는 char 자료형을 이용하며 숫자를 표현하고자할때는 int,float,double 자료형을 사용합니다.
void는 자료형자체가 없다는 의미입니다. 
여기서 주의할점 C언어에서는 따로 문자열을 저장하는 string 자료형이 없고 (JAVA에는 있음) char 자료형만을 사용하기
때문에 문자열 표현을 위해서는 char 자료형을 연속적으로 사용해야 합니다. 

variables data (변수 자료형) 밑에 4가지가 가장 대표적 
                             파이썬이던 c던 c++이던 모든지간에 대부분 이러한 형태를 채택하고 있기에 프로그래밍 기초를 공부할때 가장 필수적인 자료형임 
               ㅡ integer(정수) int
types(종류) => ㅡ character("하나의"문자) char
               ㅡ float(실수)
               ㅡ double(실수)
