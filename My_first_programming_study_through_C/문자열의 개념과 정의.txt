문자열은 c언어에서 다양한 문자 표현을 나타내기 위해서 사용합니다. 내부적으로는 문자열은 cher자료 타입의 배열로 이루
어져 있으며 이것은 다른말로 포인터와 같다고 할수 있습니다. (배열은 내부적으로 포인터와 동일한 구조라고 할수가 있음)

결과적으로 다양한 문자열을 활용해보고 다룰 수 있는 능력이 필요하기 때문에 이를 바르게 학습하여 적용하는 것이  중요합니다. 


char array[10];
이렇게 케릭터 형태의 배열이 10개가 들어갈수 있는 데이터 공간이 있다고 했을때  
| | | | | | | | | | | 이렇게 총 10개의 문자를 저장할수 있는 array 가 만들어 지는것임 

| | | | | | | | | | | 그다음 이처럼 
 0 1 2 3 4 5 6 7 8 9   index 0~9까지 갖갖이 문자가 들어갈수 있는 공간이 완성이 된걸 알수가 있음 

참고로 영어 문자 같은 경우는 전부다 한문자당 1개의 크기를 잡아먹음 즉 (1 byte) 
영어: 글자 하나당 1개의 크기 (1 byte)

왜냐하면 cher 자료형 같은 경우는 기본적으로 1바이트로 구성이 되있기 때문 
하지만 한글 같은경우,  중국어 같은 경우는 굉장히 많은 문자를 가지고 있어서 1바이트만으로 모두 표현이 안되기 때문에
총 2바이트를 사용함 
영어: 글자 하나당 1개의 크기 (1 byte)
한글: 글자 하나당 2개의 크기 (2 byte) 글자하나당 2개의 문자를(공간) 잡아먹음

즉 cher array [10]; 이렇게 선언했으면 즉 10개의 문자가 들어갈수 있는 공간이다 했을때 
| | | | | | | | | | |  영어 같은 경우는 10개가(10문자) 들어갈수 있고 
 0 1 2 3 4 5 6 7 8 9   한글 같은 경우는  5개가(5문자)만 들어갈수 있음 
이런식으로 구상이 되는것을 정확히 이해하는게 중요함  

cher array [10]; // 어뤠이 라는것도 사실상 내부적으로는 포인터로 구현이 되어 있는데 

| | | | | | | | | | |   이러한 케릭터 배열이 RAM 메모리에 올라갔다고 가정을 해보자 
 0 1 2 3 4 5 6 7 8 9     그럼 말그대로 10개의 바이트 만큼 우리의 메모리의 자리를 잡게되는것임 

|10001 | 만약에 여기를 가르키는 메모리 주소가 10001 이라고 하면 그옆은  
   0 
|10001 |10002 | 이렇게 10002가 될것임 그래서 10001 부터 10010 까지 
 0      1 

|10001 | | | | | | | | |10010 |  이렇게 케릭터 배열하나가 자리를 잡았다고 해봅시다 매모리에
 0      1 2 3 4 5 6 7 8 9

즉 이러한 구조일때 배열은 사실상 포인터와 가깝다고 할수 있음                      0 
array[10]; 이렇게 배열을 선언한다음에 이어뤠이 에 대한 값을 불러오게 되면은 바로 | | 에대해한 
이위치에 대한 주소를 10001 을 반환하게 되는데 그이유는 내부적으로 포인터는 배열이라고 할수 있기 때문 

이 array 라는 배열이 어떠한 값들의 모임을 의미한다면 그값중에서 첫번째 값의 메모리 주소값이 바로 이 어뤠이 자체가 되는것인데                0
              array = | 10001| 여기를 가르키는 포인터라고 할수있음  이러한 의미에서 배열을 포인터라고 하는것임


그렇다면 이렇게 array[1]= 이라고 한다면 
          0       1
만약에 [10001] [10002 = 7] 어뤠이 1에 이처럼 7이라는 값이 들어와 있을때

array[1]=7 이 나올것이고
&array[1]= 10002 어뤠이 1에 주소값을 말하라고 한다면 이렇게 10002가 출력될것임

이러한 구조를 이해하는것이 중요하고 다시 말하자면 배열은 내부적으로 포인터와 아주흡사한 구조를 가지고 있음

그리고 메모리에 
| | | | | | | | | | | 이런식으로 10개의 공간을 가지고 있다고 할때 바로 10개의 문자를 출력할수있는 즉 길이가 
10개까지 가능한 문자열이 표현이 가능함

바로 이러한 전반적인 내용 구성을 이해하는것이 굉장히 중요하다고 할수있음 
이러한 개념이 확실하게 머릿속에 잡혀있다면 c언어에서 문자열을 출력하는것은 굉장히 쉬움 
