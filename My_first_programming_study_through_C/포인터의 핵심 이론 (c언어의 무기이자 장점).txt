포인터에 대한 지식                           
int x; 우리가 이러한 변수를 사용하게 되면은  RAM(메모리)=>8G 요런식으로 메모리가 존재한다고 했을때  
                                              ________________________________         메모리
                                             |    x    |         |            이렇게 이중V에서 특정한 위치에 변수   
                                             |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ x를 저장하는 공간이 할당이 될것임
                                             |         |         |            (int 형이라 4byt 만큼 할당이 될것임)                                               |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
                                             |         |         |
                                             |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  
                                             |_________|_________|____________                                          이런식으로 할당이 되었을때 우리는 이제 이 x라는 변수의 값을 바꾸거나 할때 우리컴퓨터에 있는 RAM에   
    |    x    | 요위치에 있는 값을 변경하는 식으로 사용이 이루어짐 

  그렇다면 변수중에서 포인터라는 것은 아까 말했듯이 메모리에 특정한 위치를 가르키는 그러한 변수라고 했었는데 
    
     int *y = &x; 이렇게 포인터 같은경우는 이렇게 *을 이용해서 사용하는것임 &변수 하면 특정한 변수의 주소를 의미한       다고 했었음  그럼 즉 int *y= &x; 은 포인터 y가 x에 주소를 그값으로 가지게됨 

     그럼 이 포인터 y라는 것도 따로 메모리에 어떠한 위치에 자리를 잡게 되는데 
       ________________________________     
       |    x    |         |           
       |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 
       |         |         |     y     |  이 y라는 것은 이제 x에 주소를 가르키는 하나의 변수가 되는것임 그러니까    
       |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  이값에 들어가는 내용이 x에 주소 그자체가 되는말임 
       |         |         |              즉 x가 위치한 메모리 공간 그주소 자체가 y에 값으로 들어가게 되는것임 
       |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  
       |_________|_________|____________  

         ________________________________        
         |    x    |         |             
         |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
         |         |         |           
         ㅡㅡㅅㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
              ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ            만약 이렇게 윗부분과 아랫부분으로 공간을 나누어 생각을했을때                                            ||          분명 윗부분과 아랫부분은 서로 다른 공간이지만 
         |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   y가 x가 위치한 메모리주소(공간)을 가르킨다는 점에서 이y를 통해서
         |         |         |     y     |     x에 한번에 접근할수가 있음 
         |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  
         |_________|_________|____________    *바로이게 포인터의 장점이자 c언어의 무기라고 할수있음*
                                              다른 변수가 위치한 공간그자체를 바로 접근하면서 그값을 
                                               바꾸거나 다른 처리를 할수가 있는것임   


            포인터 보충 설명

    int x=70 이 선언 되었을때        
    ________________________________     
    |    x=70 |         |               그다음 메모리의 한공간에 x가 차지하는 이러한 공간이 할당이 되고
    |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   그 공간안에 70이라는 값이 들어가게 되는것임 
    |         |         |                 
    |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ   그렇다면 이러한 상태에서 int *y=&x; 인트포인트 y가 x의 주소를 가르키도록 
    |         |         |               선언이 된다면  
    |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  
    |_________|_________|____________
  

    ________________________________     
   |    x=70 |         |             
   |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ 
   |   ㅅ = =|= = = = =| = = = = y |    x를 가리키는 포인터 변수 y의 공간이 또 할당이 될것임      
   |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ    그렇다면 y의 값으로는 이제 x의 위치가 될것임 예를들어 00AA00BB
   |         |         |                뭐 이런식으로 어떠한 메모리 주소가 y의 값으로 들어갈것이고 
   |ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ  
   |_________|_________|____________    그렇다면 만약에 y를 출력하라고 한다면
                                        y => 00AA00BB이런 메모리 주소값 그자체가 출력이 될것임
                                        하지만 *y 이렇게 y가 가르키는 주소가 의미하는 값을 이렇게 불러오라고 한다면
                                        *y = 70 이되는것임 x또한 70이고  이러한 차이점을 이해해야함   
만약에 *y 값과 x 값을 바꾼다면은   
x=70 이 x가의미하는 70 이부분의 값이 변경이 되야하는것임
또 y자체가 의미하는 00AA00BB 이메모리 주소값은 그다지 의미가 없음 
또한 &x x의 메모리 주소도 00AA00BB 이것과 같음 하지만 이메모리 주소값은 정말 그다지 의미가 없고 
이메모리 주소가 가르키는 그공간에 해당하는 x라는 변수 값이 어떨게 바뀌는지가 프로그래밍에서 중점적으로 
다루어 지는 부분임 

중요 tip 만약에 int x=70
                int *y= &x 이런식으로 선언이 되었다고 했을때 
                x=*y 랑 똑같다고 할수가 있고
                &x =y 그리고  x의 주소가 그냥 y랑 똑같다고 할수 있음
이렇게 포인터를 공부할땐 이러한 차이점을 명확하게 이해하고 있는게 굉장히 중요하다고 할수 있음   
 
   

       
