#include <stdio.h>// 생각보다 되게 파일 입출력은 다루기가 간단함  
int main (void)
{
	FILE *fp =NULL; //  파일자료형 포인터 변수 fp = NULL 현재 파일 자료형의 포인터 변수는 현재 아무것도 가르키고 있지 않다   
	fp = fopen("output.txt", "w");// 파일 자료형의 포인터 변수 fp 는 f오픈 파일을(새로)오픈 할것이고 현재 아무것도 가르키고 있지 않는 fp 변수는  
	                              // output.txt 라는 주소를 가르킨다 , 그리고 W 쓰기모드를 할것인데 즉 fp는 아웃풋 텍스트 파일을 새로 생성하고 
								  // 그파일에 글을 쓸것이다.  
	// w -> 쓰기 모드(write), r -> 읽기 모드 (read) 일반적으로 와이트 w는 즉 쓰기 모드를 의미하고 r는 일기모드를 의미함
	// 지금 같은 경우는 파일을 읽어서 어떠한 쓰기를 할것이기 때문에 아웃풋점 텍스트 파일로 이렇게 쓰기 모드를 만들어본것임  
	if(fp == NULL)// 만약이 fp가 가르키고 있는곳이 null 아무것도 가르키지 못한다면 주소가 없다면 즉 해당파일을 열지못했다면  
	{
		
		printf("파일 열기에 실패했습니다.\n");// 이렇게 파일 열기에 실패앴습니다. 라는 이런메세지를 출력해주는게 가장 일반적인 예외 처리라고  
	 }            // 할수있음  
	else// 그렇지 않으면 다음과 같이 
	{
		printf("파일 열기에 성공했습니다.\n"); // 이렇게 메세지를 출력해주면 됨  
	  } 
	//여기 까지가 텍스트 파일로 파일이 생성 되었는지 생성이 안되었는지 알려주는 부분임 
	// 그리고 정말 간단하게 파일에 한글자 한글자씩 출력하는 방법이 있는데요 바로 다음과 같습니다.  
	fputc('H',fp);// 파일에 풋 넣다 c 케릭터 형으로 H를 포인터 변수 fp가 가르키는 주소 안에 즉 아웃풋 텍스트 파일에 출력하도록 해주는것임 
	fputc('E',fp); // 이런식으로 간단하게 한글자 한글자씩 출력할수가 있어요  이렇게 헬로를 출력한다음에  
	fputc('L',fp); 
	fputc('L',fp); 
	fputc('O',fp);
	fclose(fp);// 에프 클로스 파일을 닫다 fp 가 가르키고 있는주소 아웃풋점 텍스트파일을 즉 입력해주고 파일을 닫는것임 끝내는것임 이프로그램에 임무는 
	//  프로그램을 종료할때는 반듯이 이렇게 해당파일 포인터 변수를 닫아줄수 있도록 함 그래야 완변해 종료가 됨   
	return 0;
 } 
 
 
 
 
 // 이제 이렇게 실행을 해보면 텍스트 창에 파일 열기에 성공했습니다. 가 출력이 되고 이소스파일이 존제하는 폴더로 가보면  
 // output.txt 이렇게 아웃풋점 텍스트 파일이 만들어져있고 HELLO 라고 적혀있는것을 볼수 있음 
 //소스파일 이름같은 경우는 자기 마음대로 저장해주어도 상관이 없음
 
 // 아무튼 이렇게 실행했을때 순식간에 output.txt 파일을 쓰기모드로 만들어서 글자 HELLO를  꺼주었다는것을 알수 있음 
 //이렇게 파일입출력은 생각보다 간단하다고 할수있음  
