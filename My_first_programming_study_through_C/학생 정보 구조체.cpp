#include <stdio.h>
#include <stdlib.h>// 스텐다드 라이브러리 를 만들어줌 근데 이렇게만 하면 예재에서는 가능했지만 스트린 카피가 안되서 
#include <string.h> //각종 문자열 함수를 제공해주는 스트링 헤더파일을 입력 해줌  
// 이소스 파일에서는 학생 정보와 관련된 그러한 내용들을 소스 로써 다루어 볼것임 

struct student{   // struct 구조체 선언 함수처럼 사용이 가능한것이 인트메인 위에  구조체 학생이라는 것을 만듬 
	int number; // 학생의 번호 
	char name[10];// 학생의 이름 
	double grade; // 학점 
};  

int main (void)
{
	// 자료형 : 실수치, 정수, 불린 자료형 따위의 여러 종류의 데이터를 식별하는 분류로서, 더 나아가 해당
 // 자료형에 대한 가능한 값, 해당 자료형에서 수행을 마칠 수 있는 명령들, 데이터의 의미, 해당 자료형의 값을 저장하는 방식을 결정한다
	
	struct student s; // 구조체 학생 의 변수로 s를 만든것임  
	                  // 즉 하나의 자료형을 우리가 스스로 만들어 냈다고 할수 있는것임 : 구조체 선언 스튜던트 자료형 의 s(구조체)변수 
	s.number=20150001;  // 스튜던트 자료형의 s라는 구조체의 넘버 변수안에 저 값을 넣어준것임 즉 이값이 위에 struct stdent 넘버에 들어가는것임
	strcpy(s.name,"홍길동");// name 이 케릭터 배열 문자열 이기 때문에 이런식으로 문자열을카피 복사해서 사용할수 있는것임
	                        // 단 여기서 카피를 쓰면 자료형에 있는 문자열을 카피한다는 소리 즉 카피하겠다 자료형 안에 네임 이라는 문자열 s라는 
							// 구조체 변수안에 => 똑같이 자료형에서 주소를 가져와서 그안에 새로운 이름으로 홍길동을 이라는 문자열이 들어가도록 해준것임 
	s.grade =4.5;// 넘버와 같음  
	// 이렇게  s라는 이름에 스튜던트 구조체 변수는 위처럼 이런식으로 변수에 대한 값 을 가지게 되는것임
	
	printf("학번: %d\n",s.number);
	printf("이름: %s\n",s.name);// 문자열 출력시에도 %s임 null 전까지 출력
    printf("학점: %.1f\n",s.grade);
	
	// 이렇게 실행을 하면 우리가 넣었던 그러한 데이터 그대로 출력이 되는것을 알수 있음 구조체를 이용해서 
	// 하나의 학생 정보에 대한 데이터를 더욱더 간결하고 명확하게 표현할수 있게 된것임  
	
	// s.name="홍길동";  이것이 왜 안되는것인가? 이말이 핵심임  array[10]; 이렇게 배열을 선언한다음에 이어뤠이 에 대한 값을 불러오게 되면은 바로 
	// | | 에대해한 이위치에 대한 주소를 10001 을 반환하게 되는데 그이유는 내부적으로 포인터는 배열이라고 할수 있기 때문 
	// 즉 첫번째 상자안에 홍길동 8글자를 꼴아 밖았다는 뜻임 그렇기 때문에 포인터를 이용한 함수 strcpy(); 를 사용해서 
	// strcpy(s.name,"홍길동"); 오른쪽에 있는것을 왼쪽에 넣어준것임  
	return 0;
}
