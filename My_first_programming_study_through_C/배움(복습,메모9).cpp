 #include <stdio.h>

// 하나의 문자열 안에 글자수를 세는 프로그램 + 그문자를 다시 출력하는 프로그램  

/*
int main (void)
{
    char input [1001];// 케릭터 형의 인풋이라는 이름에 배열은 총 1001개만큼의 문자가 들가갈수있는 하나의 문자열임  
	gets(input);// 이렇게 gets 하고 함수이름 변수이름 을 넣어주면 인풋이라는 케릭터배열 안에 사용자가 입력하는 문자열이 엔터를 칠때 가지 
	            // 배열안으로(인풋 상자안으로) 순차적으로 들어가는것을 의미함   
	int count=0;// 인덱스랑 비슷한 역할을 할것임 즉 inpur[0] 부터 입력된 문장의 상자까지 계속 확인하면서 증가하는 역할임  
	
	while(input[count] !='\0')// \0 은 바로 NULL을 의미하는데 문자열같은 경우는 입력이 된다음에 남은 모든 공간 같은경우는 자동으로 널값이
	                          // 들어가게됨  이건 c언어의 하나의 약속임  
	{                         // 에를들어 만야게 10개 만큼에 케릭터 배열 공간이 있다고 가정했을때  
		count++;              // | | | | | | | | | | | 이배열을 array 라고 이름을 짓고 
		                      // gets(array); 겟츠를 이용해서 사용자가 입력한 값이 만약에 HELLO 라면 
							  // |H|E|L|L|O|\0|\0|\0|\0|\0|  이렇게 hello 가 들어가고 그다음부터는 \0 이렇게 다 널값이 들어가게 되는것임 
							  // 이런식으로 문자열이 끝나게 되면은 남은 공간들은 NULL 값이라고 생각해도 사실상 무관함 
							    
	 } 
	printf("입력한 문자열의 길이는 %d 입니다.",count);
	return 0;
 }
 */

int main (void)
{
	char input [1001];// 케릭터 형의 인풋이라는 이름에 배열은 총 1001개만큼의 문자가 들가갈수있는 하나의 문자열임  
	gets(input);// 이렇게 gets 하고 함수이름 변수이름 을 넣어주면 인풋이라는 케릭터배열 안에 사용자가 입력하는 문자열이 엔터를 칠때 가지 
	            // 배열안으로(인풋 상자안으로) 순차적으로 들어가는것을 의미함   
	int count=0;// 인덱스랑 비슷한 역할을 할것임   
	
	while(input[count] !='\0')// 맨처음에 카운트 값이 0이였기 때문에 널을 만날떄까지 카운트를 1씩 계속 증가시킴  
	{                
		count++;          // 예를들어 hello 을 넣었다고 했을때    
					     // index는  01234 이순서 일것임 그럼 5번째 인덱스 값이 null 값이 될것임 그렇다면 카운트 값이 5가 되면은 여기를 자연스럽게
						 // 빠져나올수 있음  		              
	 } 
	printf("입력한 문자열의 길이는 %d 입니다.\n",count);
	printf("입력한 문자열 : %s 입니다. ",input);// 추가적으로 특정한 문자열을 입력받은뒤에 바로 출력할때는 %s 쓰면서 바로 출력이 가능 
	                                            // %s 는 스트링의 약자로써 하나의 문자열을 의미하는 c언어의 하나의 형식 지정자임 
									// 사실 이러한 %s 라는것도 c언어 내부에서는 NULL 값이 보일때까지 하나의 문자를 각각 출력하나는 그러한 기법을
									// 사용하는 놈임 즉 배열을 하나씩 읽어가면서 상자하나당 안에 들어있는문자를 차래대로 출력하는것임 			  
	return 0;
}



// c언어 에서 재공하는 기본적인 문자열 함수들
 
// #include <string.h> 이게 각종 문자열 함수들을 제공해주는 라이브러리임  


// 하나의 문자열 안에 글자수를 세는 프로그램 (위에 꺼보단 간단함, 위에것이 내부적으로 구성이 되어있는 함수라고 할수있음) 
/*
  #include <stdio.h>
#include <string.h>// c언어 에서는 이렇게 스트링 헤더파일을 제공해주는데요 문자열 관련 각종 함수들을 제공해주는 하나의 라이브러리 라고 할수있음 

int main (void)
{
	char input[5]="LOVE"; // 즉 5개 만큼에 문자가 들어갈수 있는 공간을 만들어주고 LOVE 라고 넣어준것임  
	printf("문자열의 길이 : %d\n", strlen(input));// 사실 strlen(input) 이것은 좀전에 구현했던 '하나의 문자열안에 글자수 세기'랑 동일한 기능을 제공함 
	                                              // 아마 <string.h>에 strlen(input)은 아마 내부적으로 '하나의 문자열안에 글자수 세기' 프로그램과 
												  // 상당히 흡사한 내용을 담고 있는 함수를 제공해주고 있을 뿐이라는것을 이해하는것이 중요   
	
	return 0;
 } 


// 문자열을 사전적으로 비교하여 어떤것이 앞에먼저 오는지에 따라 특정한 값을 출력하는 함수

  
#include <stdio.h>
#include <string.h>
int main (void)
{
	char inputOne[5] ="A";
	char inputTow[5] ="B";
	printf("문자열 비교 : %d\n",strcmp(inputOne,inputTow));// strcmp(inputOne,inputTow) 이런식으로 입력을 해주면 
	                           // inputOne과 inputTow 를 사저적으로 비교하면서 뭐가 더앞에오는지 비교할수 있음 
	// A B = -1  즉 왼쪽에 있는게 사전적으로 더앞에있다면 -1을 출력함 						   
	// B A = 1   반대로 오른쪾에 있는게 사전적으로 더앞에 있다면 1을 출력함						     
	// B B = 0   하지만 두문자가 사전적으로 동일하다면 0이나옴 
	//strcmp()은  이처럼 사전적으로 두문자를 비교하여 특정한 숫자를 반환하는 함수라고 할수있음 
	
    // -1 0 1
    // 사전적으로 앞에것이 먼저면 -1 같으면 0 뒤에것이 먼저면 1 

	//이렇게  strcmp() 라는것은 c언어로 사전구현하기 영단어 암기장 구현하기 등 이러한 다양한 프로그램을 짤때 정말 많이 활용되는 함수라고 할수있음   
  }  



// 문자열을 복제하는 함수


    char input[11] ="I LOVE YOU";// 이라는 문자열을 만들어주고  
	char result[5] ="LOVE";
	strcpy(result,input);// 이렇게 써주면 리썰트라는 문자열이 인풋 문자열을 카피할수 있음  
	printf("문자열 복사 : %s\n",result); // 놀랍게도 리썰트는 총 5개가 들어갈수 있는 공간을 할당 했음에도 불구하고 
	// I LOVE YOU 라는 총 10개의 더긴문자가 한번에 할당이 된것을 알수있음 그이유는 strcpy()가 내부적으로 포인터를 다루는 함수라 그렇기 때문임 
	//  그래서 문자 관련 포인터를 이렇게 다루므로써 글자가 더적다고 하더라고 순식간에 복가가 가능하도록 해줌 주소를 바꿔서 

	  //strcpy 내부적으로 포인터를 다루는 함수인데 
  // 순식간에 result 에 문자열 주소를 intput 주소로 똑같이 바꿔줌 
  // char *strcpy        
  
  /*   strcpy(*input,*result) 
	   *result = *input;  
	   
  */           	
    // strcpy() 문자 복제 함수는 strcpm() 많큼이나 많이 사용됨 
    // 사실상  strcpy() , strcpm() , strlen() 지금 배운 이3가지가 가장많이 사용되는 문자열 함수라고 할수있음 
	 
	// strcpy() 을 위처럼 이런식으로 활용하게 되면 스트린 카피 함수는 정말 간편하면서도 빠르게 두개의 문자를 서로 복사하고 교체해줄수 있도록 
	// 훌룡한 기능을 제공한다고 할수 있음 c언어 에서는 이처럼 char 라는 기본 변수형을 이용해서 다양하게 문자열을 표현하는 방법을 제공하고 있고 
	// #include <string.h> 스트링 헤더파일에는 strcpy() , strcpm() , strlen() 이와같이 다양한 스트린 즉 문자열 관련 함수들을  
	// 제공 하고 있다는것을 알고 다양한 문자열에 대한 활용방법을 아는게 중요하다고 할수있음  
	











