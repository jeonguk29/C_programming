#include <stdio.h>
#include <math.h>


struct point{ // 포인터 구조체 선언 인트 x,y로 좌펴표의 거리를 지정해줄것임  
int x;
int y;  // 일반적으로 특정한 좌표상의 거리는 x,y 좌표 이두개면 알아서 구분이됨 그렇기 때문에 포인터라는 이름으로 구조체를 만들어주고 
};      // 그 내부적인 속성으로 x와 y가 들어가게 된것임 

int main (void)
{
	struct point p1, p2; // 이렇게 2개도 선언이 가능. 
	int xDiff, yDiff; // x좌표의 차이점 y좌표의 차이점  
	double distance; // 우리가 구할 두점의 떨어져있는 사이의 거리    distance 뜻 떨어져있는 , 먼 
	
	printf("1번 점의 좌표를 입력하세요 : ");
	scanf("%d %d",&p1.x, &p1.y); 
	
	printf("2번 점의 좌표를 입력하세요 : ");
	scanf("%d %d",&p2.x, &p2.y);
	
	xDiff = p1.x - p2.x;
	yDiff = p1.y - p2.y; 
	
	distance = sqrt(xDiff * xDiff + yDiff * yDiff); // sqrt() 제곱근을 구하는 함수  #include <math.h> 안에 들어가 있음 
	// 위에 이공식은 수학에서 배우는 기본적인 두점사이의 거리를 구하는 공식임    x에 2제곱은 =4 다 그럼 2,-2 가 바로 제곱근임 
	printf("두 점 사이의 거리는 %f 입니다.\n",distance); 
	
	//이런식으로 아무렇게나 자기가 원하는 값을 넣어주면 정확하게 좌표평면 사이에서 두점 사이에 거리가 완벽하게 출력 되는것을 알수 있음.
	
	// 이번시간에는 이렇게 간단하게 구조체에 대해서 알아보았고 구조체를 이용해서 프로그램을 더욱 체계적으로 설계하고 작성하는 
	// 방법에 대해서 알아 보았는데요 구조체 같은경우는 이제 c언어에 중급과정으로 들어가면서 정말 중요하면서도 기본적인 부분이라는것을 
	//확실하게 이해하고 넘어가는게 좋습니다. 그리고 또한 구조체의 개념을 정확하게 이해하고 있는게 JAVA 나 파이썬 같은 객체지향 모듈들을 
    //이용할때 더욱더 쉽게 접근할수 있도록 도와줌 	  
	return 0;
 } 
