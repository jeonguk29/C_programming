 #include <stdio.h>
 #define N 10 
 int main (void)
 {
 // for 문과 while문 은 대표적인 반복문이고 if문과 else 문 그리고 스위치문 케이스문 은 대표적인 조건문임  
 
 ///if문을 통한 절댓값 계산 프로그램 
 	
	 
	 /* int x= -150;
	 if(x<0)
	 {
	   printf("%d",-x);   1-x하면 1을 빼는건데 이처럼 그냥 -붙어있으면 -를 붙혀서 출력해라가됨  
	  } 
	*/
	 
	int x= -150 ;
	if(x<0) // while , for 문과 마찬가지로 if문을 선언할때는 ; 필요없음 그리고 ()안에 " 필요없음 "은 프린트만  
 	{
	  x = -x;
	  
    }
    
    printf("x의 절댓값은%d 입니다.\n",x);
 	
 //if 문을 통한 학점 계산 프로그램 

 	int score = 100; // 학생의 점수를 의미합니다.
 	
	if(score >= 90)//복합 대입 관계 연산자인데 크거나 같은경우를 표시해줌 : 90보다 크거나 같을경우 라는뜻. 항상 변수이름 다음 연산자 그리고 값 입력 
	{
	    printf("당신의 학점은A입니다.\n",score);// if문에는 이렇게 프린트 마지막에 변수이름을 입력해도 되고 안해도됨   
	    	 	
	}
	else if(score >= 80) //else lf 는 위에 if문이 있을때만 이렇게 밑에 사용이가능한데 위에 if문에 해당하지않고 여기에 해당하는것을 고르는 역할을 함.
	{                    // 즉 위에는 90과 같고 90이상 여기는 80과 같고 80이상 but 80이상이라 90이나오면 위에 if 값 A나오게 되는구조임   
		printf("당신의 학점은 B입니다.\n");
		
	}
	else if(score >= 70)
	{
		printf("당신의 학점은 C입니다.\n");
		
	}
	else // else if와 마찬가지로 위에 if문이 있을때만 사용이 가능한것인데 다만 다른점은 위에 else if 를 포함한 모든 if에 해당되지 않을때 이부분이 
	     // 실행되는것임 그래서  이렇게 프로그램을 짜면 어떤수가 들어와도 이구조를 거쳐서 한부분은 실행이되는것임 70보다 낮으면 다 F이기 때문에.ㅎㅎ 
	{
		printf("당신의 학점은 F입니다.\n");
	}
	 
	 
	// if문을 이용한 윤년 판독 프로그램  
	
	/* 윤년 -> 4년마다, 그렇지만 100년단위 일때는 윤년에 해당하지 않도록 반면에또 400년 단위일때는 어떤 상황이든 간에 윤년으로 설정한다.  
	  윤년이란 일반적으로 2월달은 28일까지만 존재하지만 4년에 한번은 2월을 29일 까지 존재하도록 법적으로 정해논것  
	*/
	int year = 1204;
	if(( year % 4 ==0 && year % 100 != 0) || year % 400 == 0) //   || 둘중 하나만 만족하더라도 윤년임   
	{          //근데 && 이부분에서는 하나만 틀려도 안됨 예를들어 800은 4로 나누면 200에 나머지는 0이라 성립이 됨 
	           //하지만 100으로 나누면 8에 나머지가 0임 그래서 성립이 안됨 이후 넘어가서 || 800을 400으로 나누면 성립이 나머지가 0이 성립이되 윤년임 
	      printf("%d년은 윤년입니다.\n",year);
		   	
	 } 
	else/// 여기에 if else 쓰면 조건(그물망)을 하나더만드는것이라 위에 조건을 제외한 나머지값은 윤년이 아니란걸 출력하기위해 위에값을 제외한
	    // 나머지 값전체를 빨아들이는 else 를 사용한것임.   
	{
		printf("%d년은 윤년이 아닙니다.\n",year);
		
	}
	

	/*
			int year = 2016;
	if(year % 4 ==0 || year % 400 ==0) // 이렇게 하면 안됨 900도 윤년으로 인식함 4로 나누면 나머지가 0 700백도 나머지가 0 으로 인식해서           
	                                  // 100이랑 나누는것을 다로 만들어 줘야함  	   최종 기본 연습장 3 참고  
	{
		printf("%d년은 윤년 입니다.\n",year);
	}
	else
	{
		printf("%d년은 윤년이 아닙니다.",year);
	}
	*/	
	
	
	
	// while 문을 통한 1부터 1000까지의 합  
	int u =1 , sum = 0; // 여기서 sum은 1부터 1000까지 더한 합이라는 뜻을 가지고있는데  여기서 변수를 지정하고 값을 입력해줘야 
	                   // 와일문에서 변수 사용이가능하기에 sum에 값을 먼저 0이라고 지정해준것임 즉 sum은 아직까지는 0이지만 
					   // 와일문에서는 1부터 1000까지 더한 총합값이 출력될것임  
	while(u<=1000)// u가 1000까지 같거나 1000이더 클때까지  반복문을 실행해라 라고할수있음 근데 u가 1이니까 트루  
	{            // 바로 이아래가 트루면 시작되는 곳임 이공간의 조건에 따라 계속 반복되면서 실행됨 
	  sum= sum + u;// sum은 영어로 총합, 계 라는 뜻을 가지고있음  
	  u++;
	}
	printf("1부터1000까지의 합은 %d입니다.\n",sum); // i가 1000까지 입력이되고 더이상 1을 더하지 못하면 sum값은 입력되어있던 마지막값이 그대로 
	                                               // 저장이되는것이고 이와같이 프린트로 출력을 하게되면 1부터 1000까지 더한 합의 도출되는것임  
	/// 위에한 코딩이 기본적인 반복분 예제  
	
	
   ///for 문 기본 워밍업 연습  
   int q;
   for(q=0;q<N;q++) /*사실상 프로그래밍에서 반복문이라고하면 가장 사용이 많이되는 부분이 이 for문임 
                       q=0; 이부분은 초기화 부분: q를 0으로 초기화 시키고. q<N;이부분은: 조건문,조건식 q가 N보다 작으면 
                      q++ 반복 하면서 연산이 이루어지는 부분: q가 N보다 커질때 까지 1식 증가한다 
					  전반적으로 밑에 까지 for문의 값을 설정해서 반복이 되어 몇번출력된다는 구조임  */ 
   {
       	
   printf("$");// 그래서 0부터 9까지 10번 반복 i<10 이니까 결과적으로는 $ 10개나옴  
   } 
   printf("\n");// 요건 그냥 정리를 깔끔하게 하기위해서 내가 만든거임 
   
   
   
   ///for 문을 활용한 사각형 만들기
   
   int a, b;
   for(a=0;a<N;a++)// x가 N보다 작을떄에 한에서 x를 1식 증가 시켜라 즉 0~9 까지 점점 늘어남  + for문을 작성할때는 ;표시 필요없음   
    { 
      for(b=0;b<N;b++)// 이중포문은 위에for문이 실행될때마다 그러니까 즉 (중요)~~할때마다 , 1씩 증가할때마다, 라는 뜻임  
	                  //그리고 x가 1식증가할때마다 그와동시에 y가 N보다 작을떄에 한에서 0부터 9까지 증가하는데  
	                  // 즉 x가 1식 증가할때마다 y는 0부터 9씩 증가하는것임  즉 결과는 10x10 = 100이지만 y가 1씩 증가할때마다 ㅗ 하나씩 출력되고
	   {
   		printf("ㅗ");// 여기에 출력이 되는것은 y의  for 문임 그리고 x가 1증가당 y가 10개씩 증가하는게 따라 붙으니까 
		             // x가 1씩 증가할때마다  y가 0부터 9까지 1식 증가하면서  ㅗㅗㅗㅗㅗㅗㅗㅗㅗㅗ 열개 출력하고  
	   }
   	   // 요 가로가 있어도 되고 없어도 되는데 그냥 내가 보기편하라고 씀 
       printf("\n");// 그다음 ㅗ 열개 출력이 되면 한줄 뛴다 그리고 다시 for문에서 x가 9가 될때까지  끝날때 까지 반복 
	                // 그러면 ㅗ 열개가 차곡차곡 10개씩 10줄로 쌓여 100개가 되어있는 사각형이 완성됨   
       
    }
    
    /// for문 시작할떄 열고 항상 마지막에 for문을 시작할때 { 열었던 것을 } 꼭 이렇게 마지막에 닫아줘야함 일종의 경계선 이중포문도 마찬가지
	  /// 어디까지가 이중 for문인지 열고닫아서 지정해줘야함 
  //사실 for문같은 경우는 앞서배운 while 문법보다 훨씬더 많이 활용됨 바로 다음 (위)와 같이 조건식을 더욱 잘표현할수있다는 그런 특징 때문에 그럼  
  
  // 총정리 x가 0부터 9까지 1식 증가할때마다 y는 0부터9까지 1식 증가함과 동시에 ㅗ 하나를 출력하고 y가 0부터9까지 증가해서 ㅗ가 열개 출력이 되면
  // 그다음 프린트로 한줄을 띄어 주는것임 그런다음 다시 x 1증가 y 10증가 ㅗ10개출력 한줄뛰기 에 반복 x가 9가 될때까지 그럼 총 ㅗ열개 열줄해서 
  // 100개 의 사격형 완성  
    
    
   
   
   
    int i,j;
	for(i = 0; i<N; i++)//for(int i = 0 ; i < N; i++) 이러면 오류 나는데 그이유는 기본적인 c언어는 이렇게 for문안에 초기화 부분에서 바로 i를 초기화
	                       // 시키지 못하기 때문 즉  왼쪽에 입력되있는것처럼 위에서 int로 설정을 해주고 밑에 for문에서 초기화가 가능하다는뜻 int를 
						  //for ()안에 바로쓰면 오류임 100퍼 하지만 반면에 자바같은 경우는 for문안에서 초기화를 바로하고 사용이 가능함 
						  // 자바 많이 하는 사람들이 실수하는부분   
	{                    // 코딩 뜻은 0부터 19까지 1식 증가할때마다  
		for(j = N-i-1; j>0; j--)// -1 없어도 만들수있음 공백의 계수차이임  
		{                // 20 -0-1=19, 20-1-1=18, 20-2-1=17,
			printf(" ");// 19개의 띄어스기(공백) 즉 빈칸이 19부터 1나씩 줄어들면서 출력이 되고  
			            //예제 동영상에서는 별로 했기 때문에 띄어쓰기 2번해줘야함 별이 띄어쓰기 두개의 공간을 차지하기 때문 
		}
		for(j = 0 ; j < i; j++)// (한번더정리하자면)0부터 19까지 1식 증가할때마다 반대로 19개의 공백이 하나씩 줄면서 출력이 되고 그다음
		                       // 공백과 동시에 0<0, 0<1, <0<2 19전까지 y가 x가0부터 19까지 1식 증가할때마다 $가 1나씩 늘면서 추가 된다 i가 j이보다
							   //크면 i에 맞춰서 j가 i가 증가하는거에 맞춰서 1식 증가하며  따라가 출력이 되니까    
		{                      //(18개의공백)    $ 그럼 현실에서는 피라미드모향처럼 조금만 밀어주면 되지만 프로그램은 이와같이 딱 맞춰지지가 않고  
			printf("$");       //(17개의공백)   $$  이처럼 순서대로 각이 잡히기 때문에  
		}                      //(16개의공백)  $$$
                               //(15개의공백) $$$$		
		for(j = 0 ; j < i - 1 ;j++)//   피라미드 모양을 맞추기위해서 (공백)n에 n에서1을 빼주는 코딩을 또한번 입력하면 된다     
	    {                          //  맨위0<0-1, 그다음아래0<1-1, 다다음아래0<2-1, 0<3-1  그럼 이와같이 2번째 줄부터 왼쪽수의 1식 뺴어 1부터 18까지 
		                           // 출력해주어 피라미드 모양을 만들면 된다  
			printf("$");          
		}
		printf("\n");       //그리고 항상 1자리 증가 할때마다 19의 공백 부터 1씩 줄고 y가x따라 0부터 19까지 1씩 증가하며 $가 나오며 
		                   // 그와 동시에 왼쪽수(y)의 1씩 빼주는 코드가 출력이되고 마지막처럼 한줄씩 띄어주면 피라미드가 완성이 된다   
	}
    
    
    
    
    

  
	
 	return 0;
 }
  
  
  /* 조건문과 반복문 복습 or 꿀팁 ! 
  1. 0이아닌 모든수는 (언어안에서 참값으로 분류가됨)
  2. 모든 조건문, 반복문에서는 왠만해서 무조건 괄호를 적용하고 괄호를 넣는 습관을 들여라 
  ex if문에서 if(a==1)일때 참이면 괄호를 정해줘서 어디까지 실행되는지 명확하게 알수있지만 괄호가 없으면  
              {                                            if(a==1) 
			       }                                       printf("참이다"); 바로다음 명령어 바로다음 세미클론이 ; 있을때 까지만 실행함 
				                                              printf("다음문제는 무엇일까요")  그래서 이처럼 다음 명령어와 이렇게 띄어쓰기,드레쓰기를 
															  통해 구분해서 경계를 지정하기 때문에  실수할가능성이 높음  
  3. for문 혹은 while문은 얼마든지 중첩될수 있습니다. (피라미드 만들때 이중for문 사용한거처럼)for문같은 경우는 이중으로 사용되는경우가 굉장히 많음
  
  4. for(;;) 이렇게 포문에 초기화 부분과 조건문 그리고 연산부분에 아무것도 안들어 가있으면 무한반복으로 활용이됨 
    또한 while에 while(1) 1이 들어가는거 또한 마찬가지로 무한반복이라는 뜻을 가지고있음 1은 참값이라 계속 반복되기 때문
  
  5.break;을 이용하여 반복문을 즉시 빠져나올수 있음.(탈출) 
   break;는 가장 가까운 반복문을 탈출시키도록 하는데 
   ex whlie(1) 무한반복할때
      if(a==1)
         break; 일단 가장가까운 반복문 을 빠져나오니까 와일문이 계속 반복할때 a가 1이 되는순간 즉시 멈추고 빠져나옴 	   
  */
