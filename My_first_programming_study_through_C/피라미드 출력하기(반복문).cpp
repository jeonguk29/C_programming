#include <stdio.h>
#define N 20
int main (void)
{
	int i,j;
	for(i = 0; i<N; i++)//for(int i = 0 ; i < N; i++) 이러면 오류 나는데 그이유는 기본적인 c언어는 이렇게 for문안에 초기화 부분에서 바로 i를 초기화
	                       // 시키지 못하기 때문 즉  왼쪽에 입력되있는것처럼 위에서 int로 설정을 해주고 밑에 for문에서 초기화가 가능하다는뜻 int를 
						  //for ()안에 바로쓰면 오류임 100퍼 하지만 반면에 자바같은 경우는 for문안에서 초기화를 바로하고 사용이 가능함 
						  // 자바 많이 하는 사람들이 실수하는부분   
	{                    // 코딩 뜻은 0부터 19까지 1식 증가할때마다  
		for(j = N-i-1; j>0; j--)// -1 없어도 만들수있음 공백의 계수차이임  
		{                // 20 -0-1=19, 20-1-1=18, 20-2-1=17,
			printf(" ");// 19개의 띄어스기(공백) 즉 빈칸이 19부터 1나씩 줄어들면서 출력이 되고  
			            //예제 동영상에서는 별로 했기 때문에 띄어쓰기 2번해줘야함 별이 띄어쓰기 두개의 공간을 차지하기 때문 
		}
		for(j = 0 ; j < i; j++)// (한번더정리하자면)0부터 19까지 1식 증가할때마다 반대로 19개의 공백이 하나씩 줄면서 출력이 되고 그다음
		                       // 공백과 동시에 0<0, 0<1, <0<2 19전까지 y가 x가0부터 19까지 1식 증가할때마다 $가 1나씩 늘면서 추가 된다 i가 j이보다
							   //크면 i에 맞춰서 j가 i가 증가하는거에 맞춰서 1식 증가하며  따라가 출력이 되니까    
		{                      //(18개의공백)    $ 그럼 현실에서는 피라미드모향처럼 조금만 밀어주면 되지만 프로그램은 이와같이 딱 맞춰지지가 않고  
			printf("$");       //(17개의공백)   $$  이처럼 순서대로 각이 잡히기 때문에  
		}                      //(16개의공백)  $$$
                               //(15개의공백) $$$$		
		for(j = 0 ; j < i - 1 ;j++)//   피라미드 모양을 맞추기위해서 (공백)n에 n에서1을 빼주는 코딩을 또한번 입력하면 된다     
	    {                          //  맨위0<0-1, 그다음아래0<1-1, 다다음아래0<2-1, 0<3-1  그럼 이와같이 2번째 줄부터 왼쪽수의 1식 뺴어 1부터 18까지 
		                           // 출력해주어 피라미드 모양을 만들면 된다  
			printf("$");          
		}
		printf("\n");       //그리고 항상 1자리 증가 할때마다 19의 공백 부터 1씩 줄고 y가x따라 0부터 19까지 1씩 증가하며 $가 나오며 
		                   // 그와 동시에 왼쪽수(y)의 1씩 빼주는 코드가 출력이되고 마지막처럼 한줄씩 띄어주면 피라미드가 완성이 된다   
	}
  
  return 0;
}
  
  
 // 요밑에 있는게  	 for(j = N-i-1; j>0; j--)// -1 없는것   
	
/*         int x=0;
   int y=0;
   for(x=0;x<N;x++)
   {
   	for(y=N-x;y>0;y--)                      for(y=N;y>0;y--) 이렇게 쓰면 한번 다시 돌아올때 항상 초기 화가 되니까 이렇게써주면 20-1 19만 계속됨 띄어쓰기 19만 계속 반복됨 실수 주의   
   	{                                                     20 19 18 17 이렇게 안됨 19 19 19 19 임  
   		printf(" ");
	   }
	for(y=0;y<x;y++)   
	{
	 printf("$");
    }  
    for(y=0;y<x-1;y++)
    {
    printf("$");
	}
    {
     printf("\n");
    }
   }

   
   
   
	
	return 0;
 }
 
 
 */ 
