#include <stdio.h>
// 전역변수와 사용자정의 함수를  이용한 시간더하기 프로그램  

 
// 전역변수 처음으로 사용해볼것인데 쉽게 생각해서 프로그램 전체에서 공통으로 사용할수 있는 즉 프로그램 어디서나 접근이 가능한 변수
// 전역변수는 int main (void) 밖에서 선언이됨  
int hour;
int minute;
int minuteadd; // 이 3개의 변수를 각각 카운터라는 함수를 이용하여 순식간에 연산해주는 것인데
              // 이렇게 해주면 메인함수가 되게 짧아짐 왜냐면 원래 카운터라는 함수가 이메인안에 들어가 있어야 하기 때문인데 지금은 그렇지 않기 때문  
  
            //int counter() 함수 사용법 : 함수같은 경우는 항상 이러한 구조로 작동하는데요  먼저1. int 반환 형태가 들어갑니다 2.counter 그다음 함수의 
			  // 이름이들어가고 3.() 여기에는 매개의 변수가 들어갑니다. 즉 함수는 반환형, 함수이름, 매개변수 이렇게 3개의 조합으로 이루어집니다. 
             //  이렇게 counter 라는 함수는  int 라는 반환형을 가지는데 이경우는 함수가 종료될때 인트형태에 어떤값을 반환한다는 의미임 
			 //     int counter()
			 /*{
			     	minute += minuteadd;
	                hour += minute /60;
	                minute %= 60;
	                hour %= 24;
	      이렇게    return 1; 혹은 return minute; 가 될수도 있고 이런식으로 특정한 어떠한 숫자를 함수가 종료함과 동시에 반환을 하는것인데 
	      이 반환된 값은 어디로 가냐면 이함수를 불러온 값에 반환이 되는것임  예를들어 밑에  
               }           
			  */
 void counter() // 함수 옆에는 ; 세미클론 붙히면 안됨  
                // 근데 이것은 지금 전역변수를 이용하기 때문에 반환값이 있을 필요가 없음 그래서 void 를 써줌 
                // 요void 같은 경우는 함수의 반환값이 없을때 쓰는것인데 즉 리턴을 안해준다는 소리 
				// 하지만 밑에 int main(void) 메인 함수 같은 경우는 하나의 약속처럼 return 0; 를 써서 인트라는 값을 반환하록 되어있음 
				// 이렇게 사용자정의 함수를 쓸때는 이렇게void 나 int 같이 반환형이 어떤건지에 따라서 프로그램 전반적인 내용이 굉장히 바뀔수있다는것을
				// 감안할 필요가 있음             
{
				                   
	minute += minuteadd; // 그냥 계산만 해주는거라  반환값이 없어도 되는것임  
	hour += minute /60; // 계산 부호 잘적자  
	minute %= 60;
	hour %=  24;
}


int main (void)
{
	// int a= counter(); 위에 카운터가 반환한 값이 요 a에 들어가는 식으로 사용이 많이됨  
printf("시를 입력하세요 : ");
scanf("%d",&hour);
printf("분을 입력하세요 : ");
scanf("%d",&minute);
printf("더할분을 입력하세요 : ");
scanf("%d",&minuteadd);
counter(); // 밑에 이렇게 써줘야 계산이 이루어짐  
printf("더해진 시간은 %d시 %d분 입니다.\n", hour, minute); 
	
	
	return 0;
}


//  사용자 정의 함수를 이용한 화폐의 개수를 가장 적개 주는 방법 프로그램 , 거스름돈 계산 프로그램   

/*#include <stdio.h> 

// 특정한 금액을 받아서 가장적은 거스름 화패의 개수를 구하는 함수입니다. (원래 함수를 만들때 바로 이렇게 함수의 머릿부분에 이함수가 어떠한 동작을
// 하는지에 대한 간단한 주석을 쓰는 요령을 익히는게 굉장히 좋고 중요함  
int smallest(int number) //INT 반환형 smallest 함수이름 int number 매개변수 (매개변수는 함수의 내부적으로 어떠한 처리를 도와주는 기본적으로 존재하는
//  변수라고 할수있음 이변수 앞에 int형인지 cher 형인지 double 형인지 등 설정을 잘해주어야함 ) 
// 함수: 어떠한 기능을 수행하는 코드덩어리, 값을 밭고 지정하면 그대로 출력하는역할 (변수,상수마음대로 내가 넣는거임) 
{
	int count=0;
	while (number >= 50000) // 넘버가 5만보다 작아질때 까지 계속되서 반복됨  
	{
		number -= 50000; // 예를들어 500만원이 5만원보다 작아질때까지 계속 반복되서 5만원을 빼주고  한번 뺄때마다  
		count++;// 이 화폐의 계수를 뜻하는 카운트가 1씩 늘어남  
	}
	while (number >= 10000) // 이프로그램이 무엇이냐면 예를들어 5만 5천원 같은경우는 5만원짜리 와 5천원짜리 즉 2개의 화폐만 있으면 5만5천원을 만들수
	                       // 있는데 굳이  천원짜리 55개를 줄 필요가 없다는 말임. 그래서 즉 가장 적은 거스름 화폐의 계수를 구하는 함수로써 
						   // 이렇게 맨처음 5만으로 나눠준거임 왜냐면 한국은 5만원권이 가장큰 화폐의 단위이기 때문임  
	{
		number -= 10000; // 자꾸 뺴기만함 - 뺴주고 다시 그값을 넣어주여야하는데 -= =을 안씀 자꾸 주의하자  
		count++;
	}
	while (number >= 5000)
	{
		number -= 5000; // 와일문안에는 ; 세미클론 필요함 
		count++;
	}
	while (number >= 1000)
	{
		number -= 1000;
		count++;
	}
    while (number >= 500)
	{
		number -= 500;
		count++;
	}
   while (number >= 100)
	{
		number -= 100;
		count++;
	}
  while (number >= 50)
	{
		number -= 50;
		count++;
	}
  while (number >= 10)
	{
		number -= 10;
		count++;    // 즉 이런식으로 화폐의 단위를 큰것부터 잘게 쪼개는것임  
	}
	return count; // 마지막으로 결과를 반환함 이카운트가 화폐의 계수가 되는것임 
	              // 이리턴은 항상 함수 안에 있어야함 그래야 출력값이 이안으로 들어올수 있음  즉 함수 } 마지막 닫힘 안에 있어야한다는 뜻  
	// 즉 int smallest (int number) 넘버안에 어떠한 값이 들어오면 함수를 거쳐서 마지막 return count에 그값을 화폐의 단위로 만들수있는
	// 가장적은 화폐의 개수가 반환이 되는것임 왜냐하면 반환형태가 int형이기 때문임 그리고  number라는 값은 이함수가 실행됨과 동시에 함수내부에서
	// 처리될 하나의 숫자가 되는것   
	
	 
}                  // 예를들면 500만원 같은경우는 5만원짜리 100개를 주는 경우밖에 없을것임 그래서 함수가 종료되면서 거스름 화폐의 계수가 100개다
// 이런식으로 출력이 되는것임 또 3700원이면 천:3 오:1 백:2 개이기 때문에 카운트의 마지막 출력된값은 6일것임  
// 위와같이 전반적인 계산을 도와주는 함수하나라고 할수있는것 
// tip 조건문과 반복문은 하나의 값이 아니라 ex 상수 , 변수의 값을 설정하는 조건문 즉 명령이다.
   
 
int main (void)
{
 int number;
 printf("금액을 입력하세요 : ");
 scanf("%d",&number);
 printf("최소로 줄수있는 화폐의 개수는 %d개 입니다.\n",smallest(number)); // 마지막으로 함수의 이름과 매개 변수이름을 적어주면됨 
                                                               // // 계산식이이던 뭐던 무조건 함수이름과 매개변수 적기 매개변수 없으면 그냥 () 공백
	                                                          // 처리 그리고 꼭 함수를 이용하기 위해선 int, cher 같이 앞에 자료형을 뺴고 써야함  
	
	
	
	return 0;
}



// 함수를 이용해서 1월1일부터 현재 날짜 까지의 날짜 차이를 구하는 프로그램



#include <stdio.h>

int getDays(int month,int day)// 매개변수에서 int 하고 띄어주어야함  지금이 매개변수는 무슨달 ,무슨날 인지 입력밭을 매개변수임   
{
int i, sum=0; // 이렇게 i와 sum을 선언해서(함수 안에서 선언해야함) sum은 0으로 값을 지정해주고 i는 밑에서 1로 지정해주느다 1년은 1월달 부터 시작이라 
for(i=1;i<month;i++) // i는 1부터 시작해서 month에 도달할때까지 아이를 1씩 더하면서 반복해나감  
                    // 3월 1일 일때 i가 3월보다 작은 즉 1과 2를 1,2를 반복해 증가하면서  이부분이 2번 실행됨  
                // 1보다 클때부터 시작이라 1월2일은 day만 입력되어서 2일차이남  
                // <=을 적으면 ex 3월1일 3월인  31일이 sum에 한번더 더해지고 1이 더해짐  
  {
	if(i == 2)// 이프로그램에서는 윤년을 감안하지 않습니다. (어떤떄는 2월달에 29를 더해주기 때문) 	
    {         // 만약 2월달이라렴 sum에 28을 더함 2월달은 28까지 있어서  
	sum +=28;
	}
    else if(i % 2 == 0)
    {
    sum +=30;	
	}
	else
	{
		sum +=31; // 홀수월은 31일 까지 있음   
	}
	
  }  
  
  return sum + day; // sum은 특정한 달까지에 날짜 개수를 구한거고 day는 몇날 몇일 이기 때문에 그일자를 그냥 그대로 더해준것임 
  // 1월달일 때는 31일 더해지고 2월달일때는 28일 더해져서 3월1일일때는 총 60이라는 수사를 반환 하게됨 왜냐하면 1월1읿터 3월1일까지의 거리는 60일이기 
  // 때문   
  // 이런식으로 이러한 함수를 하나 만들어놓으면 언제든지 이함수를 다시 복사해서 사용할수 있으므로써 자기 자신만의 함수가 탄생한다고 할수 있는것임 
  // 사용자 정의함수란 이런데서 바로 의미가 있는것임 이렇게 다방면으로 자기가 필요한 함수를 그떄 그때 만들어서 활용할수있는게 좋은 프로그래머가 
  // 되는 방법이라 할수있음  
   
}


int main (void)
{
	int month,day; // 메인에서 다시 또 사용할꺼고 매게 변수이기 때문에 선언해줘야함  
	scanf("%d%d",&month,&day);
	printf("1월1일부터 해당 날짜 까지의 거리는 %d일입니다.",getDays(month,day));// 이렇게 매개변수는 여러개 선언이 가능하고 ,로 두개이상을 선언이가능
	                                                      // 다만 앞에 안붙이고 뒤에 붙임 마지막꺼는 생략  
	
	return 0;
}

*/ 
