#include <stdio.h>
int main (void)
{
    
	
    ///// 조건문과 반복문을 이용한 기본 입력출력 프로그램 계산기  
	char o;
    char l;
	int x, y;
	while(1)// 무한 루트로 반복하기 때문에 계산하나가 끝나면 다음수식을 입력하시오 이게 나오는것임 
	{
		printf("수식을 입력하세요 : ");
		scanf("%d%c%d",&x,&o,&y);
		if(o == '+')///왜 o를 char로 한건지 조사해보자  // 컴퓨터로 나타낼수있는 연산자를 조사해보자 : 답은 연산자는 정수가 아니기 때문에 
		            ///  문자 하나를 담을수 있는 char 형을 쓰는 것임  (+ 연산자도 문자라서 그래서 수가아닌 연산자라서 ' ' 를 붙힘) 
		{
			printf("%d%c%d=%d\n",x,o,y,x+y); //만약 o가 +라면 x,o,y순으로 출력하고,x+y가 결과의 값으로 출력된다  
		 } 
		else if(o == '-')  // 참고로 else if는 또~하라 라는 뜻을 가지고 있음  
		{
			printf("%d%c%d=%d\n",x,o,y,x-y);// if문 쓸때 문자면 " 요거 입력 해줘야함  '-'
		 } 
       	else if(o == '*')  
		{
			printf("%d%c%d=%d\n",x,o,y,x*y);
		 } 
		else if(o == '/')  
		{
			printf("%d%c%d=%d\n",x,o,y,x/y);
		 }  
		else if(o == '%')  
		{
			printf("%d%c%d=%d\n",x,o,y,x%y);
		 }  
		else
		{
			printf("입력이 잘못 되었습니다 다시 입력해주세요. \n"); // 왜냐하면 처리할수 없는 연산자를 불러왔기 때문  
		 } 
        getchar();//요게 없으면 프로그램을 종료하시겠습니까 라는 문장 뒤에 나는 아직 입력을 하지도않았는데 잘못 입력을 했다고 출력이되는 오류가 남 
		// 그 이유는 c언어에서 버펄을 처리해주지 않았기 때문인데 이게 무슨말이냐면 5+3 하고 엔터를 치면 엔터또한 문자로 인식하여
		//5+3의 결과가 나옴과 동시에 순식간에 프로그램을 종료하시겠습니까? 에대한 문자의 답으로 엔터가 우리가 답한거랑 똑같이 됬기 때문임
		// 따라서 이버펄을 처리하기위해서 이 getchar 를 사용하는것인데 이것은 단한개의 문자를 입력밭겠다는 뜻을 가지고있어서 문자가 아닌 엔터는 
		// 입력이 되지않음 즉 버퍼 줄바꿈 엔터를  효율적으로 처리할수있는것임        
        
		printf("프로그램을 종료하시겟습니까?(y/n)");//여기다 이렇게 쓰면 위에 계산이 다끝나고 결과가 나올때 출력이 됨
        scanf("%c",&l); // 이경우는 단한개의 글자만 입력 밭을수있기 때문에 yes or no 에 y n 을따서 한글자만 입력을 밭으려고 만든 코딩임  
        if(l=='n' || l=='N')
        {
        	continue;// 여기서 탈출해서 맨위로감  
			         // 컨티뉴는 반복문이 수행될때 요시점에서 다시 맨위부분으로 돌아가서 진행 하겠다는 뜻을 가지고있는데
			         // 밑에 어떤 코드가있던간에 다 무시되고 맨위로 감  **참고로 컨티뉴와 브레이크는 조건문에 적용되는것이 아님 오로지 반복문   
		}            // 컨티뉴와 브레이크는 가장 가까운 반복문에 적용이됨  **
        else if(l=='y' || l=='Y')// 예제에서는 똑같이 char o를 여기에도 적용을 시켜서 오류가 났기때문에 내가 바꿔줌  
        {
        	break; // 여기서 탈출만함
			       // 요 브레이크문을 이용해서 이반복문을 빠져나올수 있도록함 즉 프로그램이 종료가 되는것임  
		}
        else 
		{
			printf("입력이 잘못되었습니다. 처음으로 돌아 가겠습니다.\n"); // 맨끝에 문장이라 출력되고 다시 맨위로감  
                                                                // 이게 continue  없어도 처음으로가는게 break 만 나가고 이 프린트가 뜨면서 다시
                                                                // 맨위로 반복되는 구조라 그럼  
		} 

	}  
	 ///////// 조건문과 반복문을 이용한 기본 입력출력 (정해진 계수의 정수를 더하는 프로그램)
	 
	int number, a, b, sum=0; // 이렇게 변수를 지정만 해줘도 됨 값입력을 안하고 왜냐면 및에서 할꺼니까  
	                         // 그리고 sum에 값을 넣어주지 않으면 기본값 1이 들어가서 더할때 1이 추가 되어있음 0으로 설정이 필요함  
	printf("정수의 개수를 입력하세요 : ");
	scanf("%d",&number); // 예를 들어 5개를 적으면  
	for(a=0;a<number;a++) // 0,1,2,3,4 이렇게 다섯번 실행되는것인데 1씩 증가할때마다  
	{
		printf("정수의 갑을 입력하세요: "); // 이창이나오고  
		scanf("%d",&b); // b 값을 입력밭으면  
		sum +=b; // 5번을 1번씩 돌때마다 b의 값이 sum 안에 한번씩 더해져서 sum에 저장이되는것임  
	} 
	// 그리고 다돌아서 빠져나오면 sum안에 값을 밑에처럼 출력 그럼 처음에 정해준 계수만큼 원하는 값을 더한 전체의 값이 출력이 되는것임  
	printf("전체 정수의 값은? %d입니다.\n",sum);
	
	
	///////// 조건문과 반복문을 이용한 특정한 단의 구구단을 출력하는 프로그램
	
	int j, k;
	printf("정수의값을 입력하세요 : "); // 프린트에프와 스켄에프는 둘다 " 써주고 , 를 찍음  
	scanf("%d",&j);
	for(k=1;k<=9;k++)      // for문을 다 쓰고 () 옆에 ;을 쓰면 오류나니가 썻는지 안썻는지 꼭 체크 필요함  
	{
		printf("%d X %d = %d\n",j,k,j*k);		
	}	
	 
	/* 기본 입출력 팁 (프로그램에 전반적인 작동에 관련한 문법적인 부분에서 외워야 할부분이라고 할수있음) 
	
	1. 가끔식 입력밭을때 버퍼가 프로그램 동작을 방해할때 있어서 c언어에서는 간단하게 getchar()함수로 버퍼의 공백문자를 받아낼수 있습니다.
	2. 주석은 일단 최대한 많이 작성하는 습관을 들이세요. 주석은 컴파일단계에서 제거되기에 프로그랭의 크기와는 상관이 없습니다.
	3. scanf() 함수를 사용할때 변수이름 앞에 &(주소를 의미하는 엔퍼센드, 이게 2개면 && and 연사자임)를 붙여햐합니다.
	4. 형식 지정자를 %c로 하면 엔터(enter)도 하나의 공백 문자로서 입력 받을수 있습니다. 그래서 계산기를 만들때 
	   gerchar() 사용하지 않아서 버퍼처리가 안되 이엔터까지 하나의 문자로 입력밭았기 때문에 프로그램이 정상적으로 작동하지 않았던것입니다. 
	  그래서 형식지정자가 %c 일때는 공백문자 또한 적절히 신경쓰면서 프로그래밍을 해주어야함니다. 
	
	
	
	
	
	*/ 
	return 0;
 } 
