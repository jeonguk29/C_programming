#include <stdio.h> 
#define NUMBER 5 // 이 number 라는 경우는 일반적으로 배열의 크기를 지정해줄때 c언어에서 이렇게 사용해주는 경우가 많아서 이름을 이렇게 써본것임  
#include <limits.h>

int main (void)
{
//	int i,max,min,index; // i는 임시적으로 사용하는 배열의 각각의 위치를 의미하는 변수라고 할수있고 max는 최댓값을 의미하고 min은 최솟값을 의미함  
	                     // index 는 최댓값 과 최솟값의 위치를 의미하는것임  
//	int array[NUMBER]; // 이부분이 배열을 만들어주는 방법임 
	// 배열을 다시 설명하자면 다양한 데이터를 삽입할수있는 공간이라고 했습니다. ex 만약 학생들의 성적을 보관한다고 하면 학생5명이면
	//  |70|25|12|48|52| 이렇게 5개가 필요할거고 이런식으로 간단하게 데이터들을 저장할수있을것임 이런식으로 값이 들어갔다 했을때 
	//  배열에는 해당데이터에 순서를 의미하는 인덱스 라는것이 존재함 index(순서) 목차라는 뜻을 가지고있는데 이인덱스 배열에서는 기본적으로
	// |70| 첫번째 데이터가 0이되고  25 두번째 데이터가 1  12 세번째데이터가 2 이런식으로 순서가정해짐 
	// 컴퓨터에서는 대부분이 첫번째로 시작하는 숫자를 0이라고 많이 잡고있음 배열도 마찬가지임 그러니까 즉 배열에서 0은 첫번째 데이터의 위치를 의미함    
	// |70:0|25:1|12:2|48:3|52:4|=> array 만약에 이러한 배열을 어뤠이라는 배열로 지정했을때 array[0] 이값은 70이 되는것임 
	// 왜냐하면 위처럼 어뤠이라는 배열에 0번째 인덱스에 값은 70이기 때문임  바로 이게 기본적인 배열의 활용방법임 
// 다시 정리해서 써보겠음

/*   int i,max,min,index;
   int array[NUMBER];// 1. array[0]~~array[4] 총 5개의 데이터가 들어갈수있는 크기의 배열을 선언해준것임 왜냐면 define 에서 넘버를 5로잡아주었기 때문  
   
   max=0; //4.  이렇게 맥스와 인덱스를 0이라고 해주어야 재대로된밗을 출력할수있음 0이라고 안해주면 1이라  
   index=0; // 이러면 맨처음에 가장큰 최댓값은 0으로 들어가있기 때문에 0보다 큰숫자라고 했으때
            if(max < array[i])  이러면   0 < 입력된값[0~4 순차적으로 ] 
            {                               항상 맥스가 해당 인덱스(순서에) 값으로 바뀌어나가면서 최댓값을 찿아나가는 과정이됨  
			max = array[i]; 그럼 총 5번 검사했을 때 가장큰 최댓값이 요맥스에 들어가 있게 되는것임  
			index=i;
        }
     
            
     
   for(i=0;i<NUMBER;i++) //2.i는0이고 넘버보다 작을 떄의 한에서 i를 1씩 증가시키며 반복시킴 즉 5번 반복함 
                         // 이 i는 결론적으로 |0| 이박스 하나를 의미하는것임 그래서 5번 반복 될때마다|:0|:1|:2|:3|:4|	
	{                                                                                                   // 이렇게 쌓이는것임  
		scanf("%d", &array[i]);      // 그리고 스켄에프에서 값을 입력밭으면 |70:0|25:1|12:2|48:3|52:4| 요렇게 값이 입력되는것임  
		if(max < array[i])       //3. 이부분은 즉현재의 맥스 현재의 최댓값보다 지금검사하는 i번째 인덱스(순서에)에 값이 더크다면 맥스에는 검사한 
		                            그 비교한 값을 넣어주는것임 그 해당되는값을 
		{                        // 넣어주는것임  그리고 index=i에 이값이 몇번쨰 박스인지 해당 위치를 정해주는것임  
			max = array[i];
			index=i;
		}
	}
    printf("가장큰값은 %d입니다. 그리고 %d번쨰에 있습니다.\n",max,index+1);	//5. 여기 인덱스에 1을 더한것은 컴퓨터에서 시작되는 숫자가 0부터 시작이라 
	                                                                        //0~4 라 1을 더해 우리가 볼때 햇갈리지 말라고 해준것임  
	
	 */
	 
	 
	 
   int i,max,min,index;
   int array[NUMBER];  
                          // ex 만약 20 34 72 35 90 이라 했을때 가장 큰값은 90입니다 그리고 5번째에 있습니다. 이렇게 결과가 나오는 이유는  
   max=0;        //array[0]=30 array[1]=34, array[2]=72, array[3]=35 ,array[4]=90 이렇게 차래대로 값이 들어가기 때문  
   index=0;
     
    for(i=0;i<NUMBER;i++)    // 그러니까 이 i가  0부터 시작해서 4까지 증가하면서 이모든 배열의 index(순서) 즉 30~90 까지의 모든값을 체크하면서 
	                         // 가장 큰값을 max에 넣어주는것  
                         	
	{                                                                                                   
		scanf("%d", &array[i]); // 이렇게 해줘야 어뤠이 배열안에 값을 입력할수있으         
		if(max < array[i])       // 처음 멕스는 0 그리고 30[0] 
		{                        
			max = array[i];     // max 는 30이됨  
			index=i;            // 그리고 0번째순서가 최댓값임 이라고 저장 됨  
		}                       // 그다음은 30  34[1]  ->    34    72[2]        이런식임  이러면서 최댓값인 90과 순서를  발견하여 지정하는것임  
	}                           //          34              72  
	                            //           1              2
	printf("가장큰값은 %d입니다. 그리고 %d번쨰에 있습니다.\n",max,index+1);	
    min=INT_MAX; // 최솟값을 찿기위해서는 반대로 민에 아주큰  인트자료형에서 가장큰수인 인트맥스를 넣어줌  
	for(i=0;i<NUMBER;i++) // 5번반복                        	
	{                                                                                                   
		scanf("%d", &array[i]);         
		if(min > array[i])       // 처음 민은 20억 > 30[0] 
		{                        
			min = array[i];     // min 는 30이됨  
			index=i;            // 그리고 0번째순서가 최솟값임 이라고 저장 됨  
		}                       // 그다음은 30  34[1] 이러면 그대로 30    만약  25가 있다면  30    25[2]    
	}                           //                                  30                       25
	                            //                                   0                       2
	printf("가장 작은 값은 %d입니다. 그리고 %d번쨰에 있습니다.\n",min,index+1);
	// 이러면 최댓값을 찿는부분과 최솟값을 찿는부분이 모두 완벽하게 작성이 되었다고 할수있음 
	// 이렇게 간단하게 배열을 이용하면 아주많은 숫자에 데이터도 관리를 할수가 있고 최댓값 최솟값을 방금 찿았던거처럼
	// 다양한 기능들을 손쉽게 구현 할수가 있음  배열은 바로 이러한 목적에서 많이 사용됨   
	
	return 0;
}
