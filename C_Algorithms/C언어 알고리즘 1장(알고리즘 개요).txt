1. 알고리즘 프로그램에 기본이자 가장 핵심적임 

알고리즘의 사전적 정의
알고리즘이란 '문제를 해결하는 절차'입니다.
▶ 알고리즘은 입력(어떠한 처리를하기전에는 사전에 입력이 필요)
                  출력(알고리즘을 수행했을때 어떠한 결과가 필요)
                  유한성(알고리즘은 유한한 결과를 거친다음에 종료가 됨)
                  명백성(모든 명령은 명백히 제시 되어 있어야 됨)
                  효과성(모든 명령은 실행이 가능한 형태여야함 )
                  을 만족해야 합니다.

▶ 알고리즘은 (수학적인)분석을 통해 좋고 나쁨을 평가할 수 있습니다.

▶ 알고리즘은 기초 프로그래밍과 자료구조를 공부한 이후에 배우면 좋습니다.

▶ 알고리즘은 논리(그 자체)이며 수학(과 밀접한 관련이 있음)이고 실질적인 개발에 적용되는 기초적인 아이디어입니다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

알고리즘은 구체적으로 어디에 쓰일까? 
알고리즘은 실제 개발의 전체 과정에서 사용됩니다.
▶ 실제 프로그램을 개발할 때 효율적인 알고리즘을 적용함으로써 원하는 결과를 도출해야 합니다.

▶ ex 스케줄 관리 프로그램 : 달력에서 특정한 달에 해당하는 일 수는 어떻게 구할까? ( 반듯이 사용되는 모듈중 하나가 달력에서 특정한 달에 해당하는 일수를 구하는 함수, 윤달계산, 특정달의 1일이 무슨요일인지 등 )  

▶ ex 내비게이션 프로그램 : 여러 개의 중간 지점을 거쳐서 특정 지점으로 갈 때 가장 빠른 길은 무엇일까?

▶ ex 게시판 프로그램 : 한 페이지당 게시글을 10개씩 출력해야 하는데 어떻게 출력할까?

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

알고리즘을 공부하는 이유 
알고리즘은 프로그래머에게 피할 수 없는 숙명입니다.
(어떤 프로그램을 분석하든지 어떤프로그램을 만들던지 항상 사용이 되야 되고 자기도 모르게 머리속에서 계속 알고리즘이 만들어지고 사라지는 과정이 반복되기 때문) 

▶ 세계적으로 알고리즘과 관련한 대회 및 기관은 정말 수없이 많습니다. 대표적으로 ACM-ICPC, 구글 코드잼, 코드포스, 정보올림피아드 등이 존재합니다.

▶ 아이러니하게도 일반적인 개발을 할 때는 고난이도의 알고리즘이 거의 사용되지 않습니다.
(ex 앱개발, 간단한 웹개발 할때는 내부적인 알고리즘 보다는 무언가를 더많이 알고있고 어떠한 버그가 발생했을때 그버그를 끈기있게 해결하는 능력이 더 중요함)  
그이유는 게시판이라던지 어플리케이션 안에서 사용자 목록을 보여준다든지 등 그러한 전반적인 기능들은 이미 알려진 라이브러리가 많아서 일반적으로 개발할때는 
우리가 직접 심층적인 알고리즘을 개발한다기 보다는 다양한 기능들을 끌고 와서 같다 붙여넣기 하는 방법이 훨신 많이 사용되기 때문.

▶ 그럼에도 불구하고 기업 채용이나 각종 대회에서는 문제 해결 능력을 보기 위해서 어려운 알고리즘 문제를 제시합니다.
(프로그래머에 문제해결능력을 판가름하는 가장 기본적인 기준이 알고리즘이기 때문 일반적으로 아주 어려운 알고리즘 문제를 쉽게 풀수 있는 사람이라면 웬만한 문제에 
부디쳤을때 그문제 또한 아무래도 쉽게 해결할 가능성이 높다고 판단하는것임)  

▶ 알고리즘 문제는 종합적인 개발 역량을 평가하기에 좋은 용도이기 때문입니다.


개발환경 : dev c++, 비주얼 스튜디오, 코드블럭이 가장 대표적임 

https://blog.naver.com/ndb796/221226794899 강의 자료 동빈나 블로그  
